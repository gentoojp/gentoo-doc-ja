<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ja/altinstall.xml,v 1.11 2012/04/18 18:30:27 swift Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide lang="ja">

<title>Gentoo Linuxを通常以外の方法でインストールするための手引き</title>


<author title="Contributor">
  <mail link="gerrynjr@gentoo.org">Gerald Normandin Jr.</mail>
</author>
<author title="Contributor">
  <mail link="lordviram@rebelpacket.net">Travis Tilley</mail>
</author>
<author title="Contributor">
  <mail link="volontir@yahoo.com">Oleg Raisky</mail>
</author>
<author title="Contributor">
  <mail link="luminousit@hotmail.com">Alex Garbutt</mail>
</author>
<author title="Contributor">
  <mail link="alex@openvs.com">Alexandre Georges</mail>
</author>
<author title="Contributor">
  <mail link="vargen@b0d.org">Magnus Backanda</mail>
</author>
<author title="Contributor">
  <mail link="davoid@gentoo.org">Faust A. Tanasescu</mail>
</author>
<author title="Contributor">
  <mail link="aliz@gentoo.org">Daniel Ahlberg</mail>
</author>
<author title="Editor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Reviewer">
  Ken Nowack <!-- antifa@gentoo.org seems out -->
</author>
<author title="Editor">
  <mail link="blubber@gentoo.org">Tiemo Kieft</mail>
</author>
<author title="Editor">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Editor">
  <mail link="smithj@gentoo.org">Jonathan Smith</mail>
</author>
<author title="Editor">
  <mail link="nightmorph"/>
</author>
<author title="翻訳">
  <mail link="ihr@i-ml.com">石井博文</mail>
</author>
<author title="翻訳">
  <mail link="murakami.taku@gmail.com">Taku Murakami</mail>
</author>

<abstract>
この手引きは、CD-ROMドライブがない、あるいはCDから起動できないコンピュータなど、
特殊なインストール方法が必要なときの為に、Gentooの異なるインストール方法を集めることを目的としたものです。
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1</version>
<date>2008-09-10</date>
<!-- Original revision: 1.76 -->

<chapter>
<title>この手引きについて</title>
<section>
<body>

<p>
一般的なCDから起動するインストール方法ではうまくいかない、
あるいは単にそうしたくないときにはこの手引きが役に立ちます。
この手引きは、GentooLinuxの代替的なインストール方法を必要とする方のために提供されています。
また、その気があればこの手引きをあなたの変わったインストール方法を提供する場とすることもできます。
もしも、あなたが見付けた便利なインストール方法があったり、Gentooのインストール方法で工夫した点があったりすれば、
その方法を詳しく書いて遠慮なく<uri link="http://bugs.gentoo.org">Bugzilla</uri> まで送ってください。
</p>

</body>
</section>
</chapter>

<chapter>
<title>Smart BootManagerを使ったインストールCDの起動</title>
<section>

<body>

<p>
Smart BootManagerを<uri>http://btmgr.sourceforge.net/download.html</uri>からダウンロードしてください。
多くの言語パックと一緒に、Linux用のソースコードと実行バイナリ、Windows用の.exeファイルが利用可能です。
しかしながら、新しいバージョンのNASMでソースコードをコンパイルできないので、今回はバイナリを使った方が良いでしょう。
</p>

<p>
パッケージをソースコードからコンパイルするかバイナリを入手してください。
起動用フロッピーを作るときには、下のような幾つかのオプションを利用できます。
</p>

<pre caption="Smart BootManagerのオプション">
sbminst [-t theme] [-d drv] [-b backup_file] [-u backup_file]

   -t theme       select the theme to be used, in which the theme could be:
                    us = English theme       de = German theme 
                    hu = Hungarian theme     zh = Chinese theme 
                    ru = Russian theme       cz = Czech theme
                    es = Spanish theme       fr = French theme 
                    pt = Portuguese theme 

                 
   -d drv         set the drive that you want to install Smart BootManager on;
                  for Linux:
                    /dev/fd0 is the first floppy driver, 
                    /dev/hda is the first IDE harddisk driver.
                    /dev/sda is the first SCSI harddisk driver.
                  for DOS:
                    0   is the first floppy drive
                    128 is the first hard drive;

   -c             disable CD-ROM booting feature;

   -b backup_file backup the data that will be overwritten for
                  future uninstallation;

   -u backup_file uninstall Smart BootManager, should be used alone;

   -y             do not ask any question or warning.
</pre>

<pre caption="起動用フロッピーを作るためにsbminstを使う">
# <i>sbminst -t us  -d /dev/fd0</i>
</pre>

<note>
フロッピーデバイス名が異なる場合は、<path>fd0</path>を適切に置き換えてください。
</note>

<p>
では、インストールCDを使って起動するコンピュータのCD-ROMドライブにインストールCDをセットし、
同じようにフロッピードライブにもフロッピーをセットしてコンピュータを起動してください。
</p>

<p>
Smart BootManagerのダイアログが出迎えてくれるはずです。インストールCDを起動するためにCD-ROMを選択してENTERを押してください。
起動できたら標準的なインストール方法に従ってください。
</p>

<p>
Smart BootManagerに関するもっと詳しい情報は<uri>http://btmgr.sourceforge.net/</uri>から参照できます。
</p>

</body>
</section>
</chapter>

<chapter>
<title>Knoppixを利用したインストール</title>
<section>
<body>

<note>
Knoppixはx86ユーザしか利用できません。
</note>

<!-- this works with knoppix 3.6+ and gentoo 2004.3, 2005.0-->

<p>
<uri link="http://www.knoppix.org/">Knoppix</uri>のLiveCDを使って起動する方法では、
Gentooをコンパイルしている間でも完璧に動作するシステムを使うことができます。
bootstrapが終わるのを待つ間は、Tux Racerが暇潰しのタネになりますし、OpenOfficeを使って仕事をすることもできます。
</p>

<warn>
Gentooシステムがインストールされるのを待つ間にKnoppixのホームディレクトリに何かを保存した場合、
再起動後にGentooからそれを利用することはできません。重要なデータはハードディスクや何か他のコンピュータに保存するのを忘れないでください！
</warn>

<p>
KnoppixのCDから起動します。Knoppix 3.6-3.8.2をお使いの場合は、
2.6カーネルを呼び出すためにブートオプションとして<c>knoppix26</c>を指定する必要があります。
このステップを飛ばしてしまうと、<c>chroot</c>したときに、カーネルが古すぎるというエラーメッセージが表示されます。
しかし、もしもKnoppix 3.9+をお使いの場合には、2.6カーネルがデフォルトで呼び出されるのでこのステップは必要ありません。
</p>

<p>
通常、KnoppixではKDEのデスクトップが起動します。パスワードを変更できるようにするために、
<c>konsole</c>を起動し<c>su -</c>を実行してください。これによってKnoppixでのroot ユーザのパスワードを設定できます。
ここで、リモートログインのために<c>sshd</c>を必要に応じて設定できます。
</p>

<pre caption="マウントポイント /mnt/gentoo の作成">
# <i>mkdir /mnt/gentoo</i>
</pre>

<p>
この時点で、標準的なインストールの手引きの
<uri link="/doc/en/handbook/handbook-x86.xml?part=1&amp;chap=4">パート4</uri>
(訳注: <uri link="/doc/ja/handbook/handbook-x86.xml?part=1&amp;chap=4">日本語版パート4</uri>)の部分から続けてください。
ただし、procシステムをマウントするときには、替わりに次のコマンドを実行してください。
</p>

<pre caption="proc仮想ファイルシステムのバインドマウント">
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
</pre>

<p>
また、KNOPPIXでは、PortageのFEATURES内のいくつかが動作しないことも知られています。
とりわけ、<c>userpriv</c>と<c>usersandbox</c>に注意してください。
もし、エラーが発生したら、オプション機能のいくつか、または全部を無効にすることが賢明でしょう。
</p>

<!-- 
  Commenting out due to #78716. If it needs to be restated again, note
  that some will require to bind-mount it, others don't, and that you have
  a 50-50 chance of winning the gold strike.
  

<p>
また、多くのデバイスファイルのパーミッションの問題を解決するために、デバイスツリーもバインドマウントする必要があるでしょう。
</p>

< ! - -
  If this doesn't seem to work, #71901 mentions the following command:
    mount -o remount,rw,nosuid /dev/hd* /mnt/hd*
  before all. Looks weird to me, but if this doesn't work, we might want to try
  that.
- - >

<pre caption="デバイスツリーのバインドマウント">
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
</pre>
-->

</body>
</section>
</chapter>

<chapter>
<title>ディスクを使わず、PXEブートを利用したインストール方法</title>

<section><title>必要なもの</title>
<body>

<p>
ディスクを持たないクライアントには、多くの3comのカードのような、ブートの際にPXEプロトコルを使えるネットワークカードが必要です。
また、PXEによるブートをサポートしたBIOSも必要です。
</p>

</body>
</section>
<section>
<title>サーバ上のベースセットアップ</title>
<body>

<p>
ディレクトリの作成: まず最初に、ディスクレスのシステムが保存されるディレクトリを作成します。
それぞれのディスクレスのクライアントをホストするために、<path>/diskless</path>のようなディレクトリを作成してください。
これ以降、この手引きでは'eta'という名前のクライアントのセットアップ作業をすることにします。
</p>

<pre caption="ディレクトリの作成">
# <i>mkdir /diskless</i>
# <i>mkdir /diskless/eta</i>
# <i>mkdir /diskless/eta/boot</i>
</pre>

<p>
DHCPとTFTPの設定: クライアントはDHCPを使ってブート情報を取得し、
TFTP を使って必要なファイルすべてをダウンロードします。
</p>

<p>
dhcpdについては、<c>emerge dhcp</c>（もしくは、選んだ他のDHCPサーバー）を実行してください。
<path>/etc/conf.d/dhcpd</path>のなかで正しいインタフェースが選択されていることを確認して、
基本設定をしてください。その後、次の内容を<path>/etc/dhcp/dhcpd.conf</path>に加えてください。
</p>

<note>
下の例では静的なIPアドレスと、
ここでは<path>pxegrub</path>と名付けたPXE用のブートイメージまでのパスをクライアントに対して割り当てています。
クライアントのイーサ−ネットカードのMACアドレスと、
それぞれのファイルを保存する場所は状況にあわせて書き換えてください。
</note>

<pre caption="dhcpd.conf">
option option-150 code 150 = text ;
ddns-update-style none ;
host eta {
hardware ethernet 00:00:00:00:00:00;
fixed-address <i>ip.add.re.ss</i>;
option option-150 "/eta/boot/grub.lst";
filename "/eta/boot/pxegrub";
}
</pre>


<p>
次にブートアップ時にクリアされないように、<path>/etc/conf.d/net</path>でインタフェースを設定する必要があります。
詳しくは<path>/etc/conf.d/net.example</path>をみてください。
</p>

<pre caption="/etc/conf.d/net">
<comment>(eth0 を適切なインタフェースに置き換えてください)</comment>
config_eth0=( "noop" )
</pre>

<p>
TFTPについては、<c>app-admin/tftp-hpa</c>をemergeし、
<path>/etc/conf.d/in.tftpd</path>に次の内容を加えてください。
</p>

<pre caption="in.tftpd">
INTFTPD_PATH="/diskless"
INTFTPD_USER="nobody"
INTFTPD_OPTS="-u ${INTFTPD_USER} -l -vvvvvv -p -c -s ${INTFTPD_PATH}"
</pre>

<p>
GRUBのセットアップ: PXEブートをするために<c>netboot</c>USEフラグを有効にしたGRUBを使っています。
いったんGRUBがコンパイルされたら、PXEイメージをディスクレスクライアントのブートディレクトリへコピーしてください。
その後、その<path>grub.lst</path>というコンフィグファイルを編集してください。
</p>

<pre caption="GRUBのセットアップ">
# <i>echo "sys-boot/grub netboot" &gt;&gt; /etc/portage/package.use</i>
# <i>emerge -av grub</i>
# <i>cp /usr/lib/grub/pxegrub /diskless/eta/boot/pxegrub</i>
# <i>nano -w /diskless/eta/boot/grub.lst</i>
</pre>

<pre caption="grub.lst">
default 0
timeout 30

title=Diskless Gentoo
root (nd)
kernel /eta/bzImage ip=dhcp root=/dev/nfs nfsroot=<i>ip.add.re.ss</i>:/diskless/eta

<comment>
# nfsrootオプションについては、IPアドレスにサーバのものを、
ディレクトリには(そのサーバ上で)ディスクレスクライアントのファイルが置かれている場所を指定します。
</comment>
</pre>

<p>
NFSのセットアップ: NFSの設定はとても簡単です。唯一必要なのは、
<path>/etc/exports</path>という設定ファイルに次のような内容を付け加えることだけです。
</p>

<pre caption="/etc/exports">
# <i>nano -w /etc/exports</i>
# /etc/exports: NFS file systems being exported.  See exports(5).
/diskless/eta eta(rw,sync,no_root_squash)
</pre>

<p>
hostsファイルの更新: これは重要な作業です。<path>/etc/hosts</path>を必要にあわせて編集しなければなりません。
</p>

<pre caption="/etc/hosts">
127.0.0.1 localhost

192.168.1.10 eta.example.com eta
192.168.1.20 sigma.example.com sigma
</pre>

</body>
</section>
<section><title>サーバ上にシステムを作成する</title>
<body>

<p>
ここでGentooのインストールCDを使ってサーバをリブートしたくなるかもしれませんが、
既にインストール済みのシステム上でGentooのインストール手引きに従って作業する方法が分かっていれば、
そのままうまく作業を続けることができます。
<uri link="/doc/en/handbook">Gentooハンドブック</uri><uri link="/doc/ja/handbook">
(日本語訳)</uri>で解説されている、標準的なインストール方法に従ってください。
ただし、ファイルシステムをマウントする際には、以下のようにする点が異なります
(<path>hdaX</path>は<path>/diskless</path>ディレクトリを作成したパーティションです)。
ファイルのすべては<path>/diskless/eta</path>ディレクトリ以下に置かれますから、他のパーティションをマウントする必要はありません。
</p>

<pre caption="ファイルシステムのマウント">
#<i> mount /dev/hdaX /mnt/gentoo</i>
</pre>

<p>
stage tarballとchroot: この例ではstage 3の圧縮ファイルを使います。
<path>/proc</path>をディスクレスなシステム用のディレクトリにマウントし、
そこにchrootしてインストール作業を続けましょう。
カーネルの設定の前までインストール手引書に従って作業してください。
</p>

<warn>
stage tarballを展開する場所には特に注意してください。すでにインストー
ルできているものに上書きしてしまった…なんてことはしたくありませんよね。
</warn>

<pre caption="stage tarballを展開">
# <i>cd /mnt/gentoo/diskless/eta/</i>
# <i>tar -xvjpf  /mnt/cdrom/gentoo/stage3-*.tar.bz2</i>
# <i>mount -t proc /proc /mnt/gentoo/diskless/eta/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/diskless/eta/etc/resolv.conf</i>
# <i>chroot /mnt/gentoo/diskless/eta/ /bin/bash</i>
# <i>env-update</i>
# <i>source /etc/profile</i>
</pre>

<p>
カーネルの設定: <c>make menuconfig</c>を使ってカーネルを設定するときには、イ
ンストール手引書で推奨されている項目以外にも、次の項目を有効にすることを忘れないでください。
</p>

<pre caption="menuconfigのオプション">
- お使いのネットワークカードデバイスのサポート
<comment>(モジュールと*せず*、カーネルに組み込んでください！)</comment>

- "Networking options" 以下:

[*] TCP/IP networking
[*] IP: kernel level autoconfiguration
[*] IP: DHCP support
[*] IP: BOOTP support


- "File systems --&gt; Network File Systems" 以下:

&lt;*&gt; NFS file system support
[*] Provide NFSv3 client support
[*] Root file system on NFS
</pre>

<p>
先ほどの作業でのpxgrubの設定に従って、カーネルをchroot後の<path>/</path>
(<path>/boot</path>ではありません)に保存してください。
次に、ディスクレスクライアントの<path>/etc/fstab</path>を設定します。
</p>

<pre caption="/etc/fstab">
# <i>nano -w /etc/fstab</i>
/dev/cdroms/cdrom0 /mnt/cdrom iso9660 noauto,ro 0 0
proc /proc proc defaults 0 0
tmpfs /dev/shm tmpfs nodev,nosuid,noexec 0 0
</pre>


<p>
また、クライアント側でのファイルシステムのチェックを無効にする必要があります。
</p>

<pre caption="クライアント側でのファイルシステムのチェックを無効化">
# <i>touch /fastboot</i>
# <i>echo "touch /fastboot" &gt;&gt; /etc/conf.d/local.start</i>
</pre>

<p>
クライアントがしっかりと依存している<c>nfs-utils</c>をインストールします。
</p>

<pre caption="nfs-utilsのインストール">
# <i>emerge nfs-utils</i>
</pre>

<p>
ブートローダについては、すでにpxgrubというブートローダがあるので他のものはインストールしないでください。
インストール作業が終ったらサーバをリブートしましょう。
DHCP、TFTPD、NFSといった、新しいクライアントをブートさせるために必要なサービスも起動してください。
</p>

<pre caption="サービスの起動">
# <i>/etc/init.d/dhcp start</i>
# <i>/etc/init.d/in.tftpd start</i>
# <i>/etc/init.d/nfs start</i>
</pre>

</body>
</section>
<section>
<title>新しいクライアントの起動</title>
<body>

<p>
新しいクライアントを正しく起動させるには、
起動時に(CD-ROMやフロッピーより先に)まずPXEが使われるようにBIOSやネットワークカードを設定する必要があります。
この方法については、お使いのハードウェアのマニュアルやメーカのウェブサイトを調べてください。
ネットワークカードはDHCPを使ってIPアドレスを取得し、TFTPを使ってGRUB PXEのイメージをダウンロードします。
これで、よい感じのGRUBの白黒のブートメニューが表示されるので、起動するカーネルを選択してEnterキーを押します。
すべてがうまくいっていれば、カーネルが起動してNFSを使ってルートファイルシステムをマウントし、
ログインプロンプトが表示されるはずです。楽しんでくださいね。
</p>
</body>
</section>
</chapter>

<chapter>
<title>既存のLinuxディストリビューションからGentooをインストールする</title> 
<section>
<title>必要なもの</title> 
<body>

<p>
既存のLinuxディストリビューション上からGentooをインストールするには、
既存のシステムにchrootコマンドがインストールされていて、
インストールしようと思っているGentooのインストール用tarballかISOイメージが用意されている必要があります。
tarball(ところで、tarballとはtar.gzかtbzに圧縮されているもののことです)に収録されていない機能を使いたければ、
ネットワークに接続できるとなお良いでしょう。
本稿の著者は「ホスト側の」OSとしてRedHat Linux7.3を使いましたが、これについては大して重要ではありません。
さあ、始めましょう！
</p>

</body>
</section>
<section>
<title>概要</title>
<body>

<p>
まず、既存のLinuxパーティションの容量を変更してGentoo用のパーティションを確保してマウントし、
マウントしたパーティションにtarballを展開し、その仮想的なシステムにchrootしてビルド作業を始めます。
bootstrapの作業が終わり、システムを起動可能にするための最終的な設定を行えば、再起動してGentooを使うまでの準備ができたことになります。
</p>
</body>
</section>

<section>
<title>Gentoo用のスペースを作る方法</title>
<body>

<p>
ルートパーティションは<path>/</path>以下にマウントされるファイルシステムです。
とりあえず私のシステムで<c>mount</c>を使ってみた結果を御覧頂ければ、何のことかすぐに分かって頂けると思います。
ディスク領域をどれだけ使っていてどれだけリサイズすれば良いかは、<c>df</c>(disk free)コマンドを使えば分かります。
ルートパーティションを無理矢理リサイズしないように注意してください！
リサイズ用のツールがサポートしていれば他のどんなものでもリサイズ可能ですが、それについては後程触れることにします。
</p>


<pre caption="ファイルシステムの情報">
# <i>mount</i>
/dev/hdb2 on / type ext3 (rw)
none on /proc type proc (rw)
none on /dev/pts type devpts (rw,gid=5,mode=620)
none on /dev/shm type tmpfs (rw,nodev,nosuid,noexec)
# <i>df -h </i>
Filesystem           Size Used Avail Use% Mounted on 
/dev/hdb2            4.0G 1.9G  2.4G  82% /
none                  38M    0   38M   0% /dev/shm 
</pre>

<p>
御覧の通り、<path>/</path>にマウントされているパーティションは2.4GBの空き領域のある<path>/dev/hdb2</path>に割り当てられています。
私の場合は、これを400MBの空き領域を残してリサイズしようと思います。
つまり、Gentoo 用に2GBを確保する訳です。まあ、このくらい用意すれば良いんじゃないかなと思います。
いろいろインストールできることでしょう。とはいえ、ほとんどのユーザにとっては1GBでも十分かもしれません。
さあ、パーティションの確保を始めましょう！
</p>

</body>
</section>
<section>
<title>パーティションのリサイズのためにpartedを構築する</title> 
<body>

<p>
partedは、日常様々な場面で使っているツールを開発している、
GNUという歴史のある偉大で大規模なプロジェクトが提供しているユーティリティです。
ここで挙げるのはたった一つのツールですが、こういう場面ではとても役に立ちます。
これはpartedと呼ばれるパーティションエディタで、<uri>http://www.gnu.org/software/parted/</uri> から入手できます。
</p>

<note>
同じようにパーティションをリサイズできるツールは他にもありますが、
著者はPartitionMagic(tm)や同じような機能のある他のソフトウェアについてはよく知らないしあまり興味もないので、
そういったものに関することは読者の皆さんにお任せします。
</note>

<p>
先程のページから、リサイズするファイルシステムの種類と、partedがそれに対応しているかを探してください。
もしも、残念なことに対応していなければ、Gentooで使うためにどこかのパーティションを潰して再インストールしなくてはいけません。
ソフトウェアをダウンロードし、インストールしてください。
ここでひとつ問題があります。私達はLinuxのルートパーティションをリサイズするつもりですが、
そのためには<path>/</path>をリサイズするための最小限のLinuxシステムと、
事前にコンパイルされたpartedを格納したフロッピーディスクが必要になります。
しかし、Linuxを走らせたままで対象のパーティションをアンマウントできるなら、以下の作業は必要ないのでラッキーです。
ではpartedをコンパイルして、アンマウントしたリサイズ用パーティションに対して実行します。私のシステムでは以下のようにしました。
</p>

<impo>
そのパーティションに対して行おうとしている操作をpartedがサポートしてい
るかどうか確認してください！
</impo>

<p>
mininuxのブート/ルート用のディスク(2.4カーネルで動く、フロッピー向けLinuxディストリビューションで無料です)を
<uri>http://mininux.free.fr/uk/</uri>から入手し、ソフトウェアパッケージに付属している解説書の内容に従ってフロッピーを作成し、
次の手順のために新しいフロッピーをドライブに挿れてください。
</p>

<note>
Linuxは「やり方は一つではない」という言葉と同義であると言えます。
目的は、partedを使って、アンマウントされたパーティションを使えるようにすることです。
mininux以外のboot/rootディスクも使えます。この手順は必ずしも必要ではなく、
要は現在のLinuxシステムからパーティションを再割り当てするファイルシステムをアンマウントしてpartedを実行できれば良いのです。
</note>

<pre caption="ユーティリティ ディスクの作成">
# <i>mkfs.minix /dev/fd0</i>
480 inodes
1440 blocks
Firstdatazone=19 (19)
Zonesize=1024
Maxsize=268966912
</pre>

<p>
ではpartedをビルドすることにしましょう。
まだダウンロードや展開ができていなければ、まずそれを終わらせて、対応するディレクトリへ<c>cd</c>するところまで進めてください。
そして、次のコマンドでユーティリティを構築してフロッピーディスクへコピーします。
</p>

<pre caption="ユーティリティ・フロッピーディスクの構築">
# <i> mkdir /floppy; mount -t minix /dev/fd0 /floppy &amp;&amp; 
export CFLAGS="-O3 -pipe -fomit-frame-pointer -static" &amp;&amp; ./configure 
&amp;&amp; make &amp;&amp; cp parted/parted /floppy &amp;&amp; umount /floppy </i>
</pre>

<p>
おめでとうございます。これで再起動してパーティションをリサイズする準備ができました。
この作業は最低でもGNUのウェブサイトにあるpartedのドキュメントをざっと読んでから始めてください。
大容量のハードディスクではリサイズに30分程度かかることがありますが、我慢して待ちましょう。
mininuxのブートディスクをフロッピードライブに入れて再起動し、ログインします。
ログインできたらpartedを<path>/floppy</path>から呼び出せるように、
先程作ったユーティリティ・ディスクに入れ換えて<c>mount /dev/fd0 /floppy</c>とタイプしてください。
さあ、始めましょう。partedを起動し、パーティションをリサイズします。
この長ったらしい作業が終れば、Gentooをインストールして色々と遊べると思います。
そして、再起動して元のLinuxシステムに戻りましょう。操作するドライブは、リサイズするパーティションを含んでいるドライブです。
例えば、/dev/hda3をリサイズするならドライブは/dev/hdaになります。
</p>

<pre caption="mininuxにログインしたときに使うコマンド">
# <i>mount /dev/fd0 /floppy </i>
# <i>cd /floppy; ./parted [操作するドライブ]</i>
(parted) <i> print </i>
Disk geometry for /dev/hdb: 0.000-9787.148 megabytes
Disk label type: msdos
Minor    Start       End     Type      Filesystem  Flags
1          0.031   2953.125  primary   ntfs        
3       2953.125   3133.265  primary   linux-swap  
2       3133.266   5633.085  primary   ext3        
4       5633.086   9787.148  extended              
5       5633.117   6633.210  logical               
6       6633.242   9787.148  logical   ext3        
(parted) <i> help resize </i>
  resize MINOR START END        resize filesystem on partition MINOR

        MINOR is the partition number used by Linux.  On msdos disk labels, the
        primary partitions number from 1-4, and logical partitions are 5
        onwards.
        START and END are in megabytes
(parted) <i> resize 2 3133.266 4000.000 </i>
</pre>

<impo>
我慢してお待ちください！コンピュータは働いています！マシンのケースについているLEDを見れば本当に働いているのが分かるはずです。
この作業には2分から30分程度はかかると思います。
</impo>

<p>
リサイズが終わったら、先程説明したようにリブートして元のLinuxシステムに戻ってください。
そして
<uri link="/doc/en/handbook/handbook-x86.xml?part=1&amp;chap=4">The GentooHandbook: Preparing the Disks</uri>
(訳注: 日本語版は<uri link="/doc/ja/handbook/handbook-x86.xml?part=1&amp;chap=4">GentooLinux Documentation -- ディスクの準備</uri>)を開き、
その内容に従って作業を進めてください。
chrootする際には、環境を更新するために、以下のコマンドを実行してください。
</p>

<pre caption="chroot時の環境更新">
# <i>env -i HOME=$HOME TERM=$TERM chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update</i>
# <i>source /etc/profile</i>
</pre>

<p>
楽しんでくださいね！
</p>

</body>
</section>
</chapter>

</guide>
