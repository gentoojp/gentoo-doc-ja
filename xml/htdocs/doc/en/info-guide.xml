<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/info-guide.xml,v 1.5 2013/08/03 16:48:37 swift Exp $ -->

<guide redirect="https://wiki.gentoo.org/wiki/Info">
<title>Gentoo Info Guide</title>

<author title="Chris White">
  <mail link="chriswhite@gentoo.org">Chris White</mail>
</author>

<abstract>
This guide is meant to show how to navigate info pages using the info command.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1</version>
<date>2006-03-28</date>

<chapter>
<title>Introduction</title>
<section>
<title>What is info?</title>
<body>

<p>
Most of you may be familiar with the <c>man</c> documentation system. While man
is good with quickly looking up items, it lacks structure in linking man pages
together. This is where <c>info</c> comes in. Info pages are made using the
<c>texinfo</c> tools, and can link with other pages, create menus and ease
navigation in general. The next section will look at how info pages are laid
out.
</p>

</body>
</section>
<section>
<title>Info pages layout</title>
<body>

<p>
The main info pages are held in <path>/usr/share/info</path>. Unlike the man
style directory layout, <path>/usr/share/info</path> contains what is largely a
rather extensive collection of files. These files have the following format:
</p>

<pre caption="info file format">
pagename.info[-node].gz
</pre>

<p>
<c>pagename</c> is the actual name of the page (example: <c>wget</c>).
<c>[-node]</c> is an optional construct that designates another node level
(generally these are referenced to by the toplevel of the info document in
question). In order to save space these info pages are compressed using the
<c>gzip</c> compression scheme. Additional info pages can be listed with the
<c>INFOPATH</c> environment variable (usually set through the various
<path>/etc/env.d/</path> files). To get started, it's important to note the
<path>/usr/share/info/dir</path> file. This special file is used when info is
ran with no parameters. It contains a listing of all info pages available for
users to browse. To begin looking at navigating around in info, we'll go ahead
and bring it up with no arguments:
</p>

<pre caption="Starting up info">
$ <i>info</i>
</pre>

<p>
Now in the next chapter we'll look at dealing with basic info navigation.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Working with info pages</title>
<section>
<title>Browsing with menus</title>
<body>

<p>
Now that info is started, we're given a screen similar to this:
</p>

<pre caption="Sample info screen">
File: dir,      Node: Top       This is the top of the INFO tree

  This (the Directory node) gives a menu of major topics.
  Typing "q" exits, "?" lists all Info commands, "d" returns here,
  "h" gives a primer for first-timers,
  "mEmacs&lt;Return&gt;" visits the Emacs manual, etc.

  In Emacs, you can click mouse button 2 on a menu item or cross reference
  to select it.

* Menu:

User Interface Toolkit
* GDK: (gdk).           The General Drawing Kit
* GTK: (gtk).           The GIMP Toolkit

GNU programming tools
* Autoconf v2.1: (autoconf).         Create source code configuration scripts.
</pre>

<p>
Right now there are a bunch of entries with an asterisk before them. These are
menu items for navigating through different node levels. There are two ways of
selecting menus. We'll look at the first now and the other way later. First
off, we'll go ahead and look at the <c>wget</c> info page. To do so, use the
down arrow key until you reach the area indicated by the blue highlighting:
</p>

<pre caption="Navigating to the wget info menu entry">
Network Applications
* GnuTLS: (gnutls).                     Package for Transport Layer Security.
* <i>Wget: (wget).</i>         The non-interactive network downloader.
* certtool: (gnutls)Invoking certtool.  Manipulate certificates and keys.
* gnutls-cli: (gnutls)Invoking gnutls-cli.      GNU TLS test client.
* gnutls-cli-debug: (gnutls)Invoking gnutls-cli-debug.  GNU TLS debug client.
* gnutls-serv: (gnutls)Invoking gnutls-serv.    GNU TLS test server.
* srptool: (gnutls)Invoking srptool.    Simple SRP password tool.
</pre>

<p>
Once you get to this area, hit the <c>ENTER</c> key to select the menu item.
This will bring up the info page for <c>wget</c>:
</p>

<pre caption="The wget info page">
File: wget.info,  Node: Top,  Next: Overview,  Up: (dir)

Wget 1.10.2
***********

This manual documents version 1.10.2 of GNU Wget, the freely available
utility for network downloads.

   Copyright (C) 1996-2005 Free Software Foundation, Inc.

* Menu:

* Overview::            Features of Wget.
* Invoking::            Wget command-line arguments.
* Recursive Download::  Downloading interlinked pages.
* Following Links::     The available methods of chasing links.
* Time-Stamping::       Mirroring according to time-stamps.
* Startup File::        Wget's initialization file.
</pre>

<p>
Now that we have an info page up, the next section will look at basic
navigation.
</p>

</body>
</section>
<section>
<title>Basic navigation</title>
<body>

<p>
In terms of nodes, this is considered the <c>Top</c> node for the wget page.
Consider the <c>Top</c> node to be the same as the table of contents for that
particular info page. Now to navigate the actual page itself, you have a couple
of different methods. First off is the standard info method. This is using the
<c>SPACE</c> key to move forward a page and the <c>BACKSPACE/DELETE</c> keys to
move back a page. This is the recommended method as it automatically
advances/retreats to the appropriate node in the document. This allows for a
somewhat linear browsing for those used to man pages. Another way is through
the <c>PAGE UP/PAGE DOWN</c> keys. These work, but they will not
advance/retreat like <c>SPACE/BACKSPACE/DELETE</c> will. If you want to skip
entire nodes without using <c>SPACE/BACKSPACE/DELETE</c>, you can also use the
<c>[</c> (advance backwards) and <c>]</c> (advance forwards) keys.
</p>

<p>
As mentioned earlier, there are 2 ways of navigating menus. The other way will
now be described here. The numbers <c>1-9</c> can be used to reference to the
first-ninth menu entries in a document. This can be used to quickly peruse
through documents. For example, we'll use <c>3</c> to reach the <c>Recursive
Download</c> menu entry. So press <c>3</c> and it will bring up the
<c>Recursive Download</c> screen:
</p>

<pre caption="Resulting Recursive Download screen">
File: wget.info,  Node: Recursive Download,  Next: Following Links,  Prev: Invoking,  Up: Top

3 Recursive Download
********************

GNU Wget is capable of traversing parts of the Web (or a single HTTP or
FTP server), following links and directory structure.  We refer to this
as to "recursive retrieval", or "recursion".
</pre>

<p>
Now we're at the <c>Recursive Download</c> screen. Here is a good time to note
a few things. First off the top header section. This header shows the
navigation capable from this particular screen. The page indicated by
<c>Next: </c> can be accessed by pressing the <c>n</c> key, and the page
indicated by <c>Prev: </c> can be accessed by pressing the <c>p</c> key. Please
note that this will only work for the same level. If overused you could round
up in totally unrelated content. It's better to use
<c>SPACE/BACKSPACE/DELETE/[/]</c> to navigate in a linear fashion.
</p>

<p>
If for some reason you get lost, there are a few ways to get out. First is the
<c>t</c> key. This will take you straight to the toplevel (table of contents)
for the particular info page you're browsing. If you want to return to the last
page you looked out, you can do so with the <c>l</c> key. If you want to go to
the above level, you can do so with the <c>u</c> key. Now that you have some
idea of navigating a page, the next chapter will look at searching for content.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Searching through info</title>
<section>
<title>Navigating to other info pages</title>
<body>

<p>
Now that you can navigate an individual info page, it's important to look at
accessing other info pages. The first obvious way is to go to the info page
through the <c>dir</c> index listing of info pages. To get to the <c>dir</c>
index from deep within a document, simply press the <c>d</c> key. From there
you can search for the appropriate page you want. However, if you know the
actual page, there is an easier way through the <c>Goto node (g key)</c>
command. To go to an info page by name, type <c>g</c> to bring up the prompt
and enter the name of the page in parentheses:
</p>

<pre caption="Going to an info page by name">
* Startup File::        Wget's initialization file.
* Examples::            Examples of usage.
* Various::             The stuff that doesn't fit anywhere else.
* Appendices::          Some useful references.
* Copying::             You may give out copies of Wget and of this manual.
--zz-Info: (wget.info.gz)Top, 24 lines --Top-------------------------------
Goto node: <i>(libc)</i>
</pre>

<p>
This will bring up the libc page as shown here:
</p>

<pre caption="Result of the Goto node command">
File: libc.info,  Node: Top,  Next: Introduction,  Prev: (dir),  Up: (dir)

Main Menu
*********

This is Edition 0.10, last updated 2001-07-06, of `The GNU C Library
Reference Manual', for Version 2.3.x of the GNU C Library.

* Menu:

* Introduction::                 Purpose of the GNU C Library.
</pre>

<p>
Now that we know how to go to info pages by name, the next section will look at
searching for pieces of information using the info page's index.
</p>

</body>
</section>
<section>
<title>Searching using an index</title>
<body>

<p>
In this example we'll see how to lookup the <c>printf</c> function of the c
library using the <c>libc</c> info page's index. You should still be at the
libc info page from the last section, and if not, use the Goto node command to
do so. To utilize the index search, hit the <c>i</c> key to bring up the
prompt, then enter your search term. We'll do so for <c>printf</c> below:
</p>

<pre caption="Entering an index search query">
* Character Set Handling::       Support for extended character sets.
* Locales::                      The country and language can affect the
                                   behavior of library functions.
* Message Translation::          How to make the program speak the user's
                                   language.
--zz-Info: (libc.info.gz)Top, 1291 lines --Top-- Subfile: libc.info-1.gz-----
Index entry: <i>printf</i>
</pre>

<p>
After pressing enter upon completion of our query, we're brought to the
<c>libc</c> definition for <c>printf</c>:
</p>

<pre caption="Result of the index search query">
File: libc.info,  Node: Formatted Output Functions,  Next: Dynamic Output,  Prev: Other Output Conversions,  Up: Formatted Output

12.12.7 Formatted Output Functions
----------------------------------

This section describes how to call <i>`printf'</i> and related functions.
Prototypes for these functions are in the header file `stdio.h'.
Because these functions take a variable number of arguments, you _must_
declare prototypes for them before using them.  Of course, the easiest
way to make sure you have all the right prototypes is to just include
</pre>

<p>
We've now successfully performed a search using the <c>libc</c> info page
index. However, sometimes what we want is in the page itself. The next section
will look at performing searches within the page.
</p>

</body>
</section>
<section>
<title>Searching using the search command</title>
<body>

<p>
Starting from the previous location at the <c>Formatted Output Functions</c>
node, we'll look at searching for the <c>sprintf</c> variation of the
<c>printf</c> function. To perform a search, press the <c>s</c> key to
bring up the search prompt, and then enter the query (sprintf in this case):
</p>

<pre caption="Entering a search query">
 -- Function: int wprintf (const wchar_t *TEMPLATE, ...)
     The `wprintf' function prints the optional arguments under the
     control of the wide template string TEMPLATE to the stream
     `stdout'.  It returns the number of wide characters printed, or a
--zz-Info: (libc.info.gz)Formatted Output Functions, 127 lines --Top-- Subfile: libc.info-3.gz--
Search for string []: <i>sprintf</i>
</pre>

<p>
Hit <c>ENTER</c> and it will show the result of the query:
</p>

<pre caption="Result of the search query">
-- Function: int <i>sprintf</i> (char *S, const char *TEMPLATE, ...)
     This is like `printf', except that the output is stored in the
     character array S instead of written to a stream.  A null
     character is written to mark the end of the string.

     The `sprintf' function returns the number of characters stored in
     the array S, not including the terminating null character.
</pre>

<p>
And we have the function we need.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Conclusion</title>
<section>
<title>Conclusion</title>
<body>

<p>
This concludes the overview of using info to view info pages. As always
comments are both welcome and appreciated. Clicking on the my name (Chris
White) on the right side will send me an email.
</p>

</body>
</section>
<section>
<title>Additional Program Resources</title>
<body>

<p>
In order to make things easier for those that wish to browse info pages through
a more friendly graphical interface, the following are available:
</p>

<ul>
  <li>app-text/info2html - Convert info pages to a browse-able HTML format</li>
  <li>app-text/pinfo - <c>ncurses</c> based info viewer</li>
  <li>app-text/tkinfo - a <c>tcl/tk</c> based info browser</li>
  <li>app-vim/info - a <c>vim</c> based info browser</li>
</ul>

<p>
The <c>KDE</c> browser <c>Konqueror</c> also allows you to browse info pages
through the <c>info: </c> URI.
</p>

</body>
</section>
</chapter>
</guide>
